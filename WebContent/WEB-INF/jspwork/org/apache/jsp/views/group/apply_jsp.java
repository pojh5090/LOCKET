/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2020-10-28 12:11:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.group;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import group.model.vo.*;
import member.model.vo.Member;

public final class apply_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("group.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	Group g = (Group)request.getAttribute("group");
	Member loginMember = (Member)session.getAttribute("loginMember");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>비밀번호 변경</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h2 align=\"center\">공동구매 신청</h2>\r\n");
      out.write("\t\t\r\n");
      out.write("\t<form action=\"");
      out.print( request.getContextPath() );
      out.write("/applyForm.gr\" method=\"post\" id=\"applyGr\" name=\"applyGr\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label>구매수량 : </label></td>\r\n");
      out.write("\t\t\t\t<td><input type=\"number\" name=\"amount\" id=\"amount\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label>가격 : ");
      out.print( g.getPrice() );
      out.write("</label></td>\r\n");
      out.write("\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label>배송지</label></td>\t\t<!-- 배송지명 select 드롭다운 선택 시 하단에 주소뜨게하기 -->\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<select>\r\n");
      out.write("\t\t\t\t\t\t<option>배송지 선택</option>\r\n");
      out.write("\t\t\t\t\t\t<option>배송지1</option>\r\n");
      out.write("\t\t\t\t\t\t<option>배송지2</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"btns\" align=\"center\">\r\n");
      out.write("\t\t\t<button onclick=\"requestPay();\">결제하기</button>\r\n");
      out.write("\t\t\t<input type=\"button\" id=\"cancelBtn\" onclick=\"self.close();\" value=\"취소하기\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction requestPay(){\r\n");
      out.write("\t\t\tvar amount = $('#amount').val() * \"");
      out.print( g.getPrice() );
      out.write("\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar name = \"");
      out.print( g.getGroupTitle() );
      out.write("\";\r\n");
      out.write("\t\t\tvar buyer_name = \"");
      out.print( loginMember.getNickName() );
      out.write("\";\r\n");
      out.write("\t\t\tvar buyer_phone = \"");
      out.print( loginMember.getPhone() );
      out.write("\";\r\n");
      out.write("\t\t\tvar buyer_email = \"");
      out.print( loginMember.getEmail() );
      out.write("\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar merchant_uid;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl: \"apply.gr\",\r\n");
      out.write("\t\t\t\ttype: \"post\",\r\n");
      out.write("\t\t\t\tdata: {\r\n");
      out.write("\t\t\t\t\tamount : amount,\r\n");
      out.write("\t\t\t\t\tname : name,\r\n");
      out.write("\t\t\t\t\tbuyer_name : buyer_name,\r\n");
      out.write("\t\t\t\t\tbuyer_phone : buyer_phone,\r\n");
      out.write("\t\t\t\t\tbuyer_email : buyer_email \r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tsuccess : function(merchant_uid){\r\n");
      out.write("\t\t\t\t\tconsole.log(merchant_uid);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(merchant_uid != \"\"){\r\n");
      out.write("\t\t\t\t\t\tpayment(amount, name, buyer_name, buyer_phone, buyer_email, merchant_uid);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\talert(\"결제 실패\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\terror: function(){\r\n");
      out.write("\t\t\t\t\talert(\"ajax 통신 실패\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction payment(amount, name, buyer_name, buyer_phone, buyer_email, merchant_uid){\r\n");
      out.write(" \t\t\tvar IMP = window.IMP;\r\n");
      out.write("\t\t\tIMP.init(\"imp55592976\");\t\t\t\t// 가맹점 식별코드 (고유코드)\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tIMP.request_pay({ // param\r\n");
      out.write("\t\t\t\t\tpg: \"html5_inicis\",\t\t\t\t// 이니시스 결제방식\r\n");
      out.write("\t\t\t\t\tpay_method: \"vbank\",\t\t\t// 무통장 입금\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tmerchant_uid: merchant_uid,\t\t// 결제 고유 식별번호\r\n");
      out.write("\t\t\t\t\tamount: amount,\t\t\t\t\t// 결제 금액\r\n");
      out.write("\t\t\t\t\tname: name,\t\t\t\t\t\t// 주문 대상\r\n");
      out.write("\t\t\t\t\tbuyer_name: buyer_name,\t\t\t// 주문자이름\r\n");
      out.write("\t\t\t\t\tbuyer_tel: buyer_phone,\t\t\t// 주문자 연락처\r\n");
      out.write("\t\t\t\t\tbuyer_email: buyer_email,\t\t// 주문자 이메일\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t}, function (rsp) { // callback\r\n");
      out.write("\t\t\t\tconsole.log(rsp);\r\n");
      out.write("\t\t\t\tif (rsp.success) {\r\n");
      out.write("\t\t\t\t\tvar msg = '결제가 완료되었습니다.';\r\n");
      out.write("\t\t\t\t\tmsg += '\\n고유ID : ' + rsp.imp_uid;\r\n");
      out.write("\t\t\t\t\tmsg += '\\n상점 거래ID : ' + rsp.merchant_uid;\r\n");
      out.write("\t\t\t\t\tmsg += '결제 금액 : ' + rsp.paid_amount;\r\n");
      out.write("\t\t\t\t\tmsg += '카드 승인번호 : ' + rsp.apply_num;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\talert(msg);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tvar msg = '결제에 실패하였습니다.';\r\n");
      out.write("\t\t\t\t\tmsg += '에러내용 : ' + rsp.error_msg;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}); \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"https://service.iamport.kr/js/iamport.payment-1.1.5.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
